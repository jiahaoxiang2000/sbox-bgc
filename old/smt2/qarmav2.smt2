(set-logic QF_BV)
(declare-const x0 (_ BitVec 16))
(declare-const x1 (_ BitVec 16))
(declare-const x2 (_ BitVec 16))
(declare-const x3 (_ BitVec 16))
(declare-const y0 (_ BitVec 16))
(declare-const y1 (_ BitVec 16))
(declare-const y2 (_ BitVec 16))
(declare-const y3 (_ BitVec 16))
(declare-const t0 (_ BitVec 16))
(declare-const t1 (_ BitVec 16))
(declare-const t2 (_ BitVec 16))
(declare-const t3 (_ BitVec 16))
(declare-const t4 (_ BitVec 16))
(declare-const t5 (_ BitVec 16))
(declare-const t6 (_ BitVec 16))
(declare-const t7 (_ BitVec 16))
(declare-const t8 (_ BitVec 16))
(declare-const t9 (_ BitVec 16))
(declare-const t10 (_ BitVec 16))
(declare-const t11 (_ BitVec 16))
(declare-const t12 (_ BitVec 16))
(declare-const t13 (_ BitVec 16))
(declare-const t14 (_ BitVec 16))
(declare-const t15 (_ BitVec 16))
(declare-const t16 (_ BitVec 16))
(declare-const t17 (_ BitVec 16))
(declare-const t18 (_ BitVec 16))
(declare-const t19 (_ BitVec 16))
(declare-const q0 (_ BitVec 16))
(declare-const q1 (_ BitVec 16))
(declare-const q2 (_ BitVec 16))
(declare-const q3 (_ BitVec 16))
(declare-const q4 (_ BitVec 16))
(declare-const q5 (_ BitVec 16))
(declare-const q6 (_ BitVec 16))
(declare-const q7 (_ BitVec 16))
(declare-const q8 (_ BitVec 16))
(declare-const q9 (_ BitVec 16))
(declare-const q10 (_ BitVec 16))
(declare-const q11 (_ BitVec 16))
(declare-const q12 (_ BitVec 16))
(declare-const q13 (_ BitVec 16))
(declare-const q14 (_ BitVec 16))
(declare-const q15 (_ BitVec 16))
(declare-const q16 (_ BitVec 16))
(declare-const q17 (_ BitVec 16))
(declare-const q18 (_ BitVec 16))
(declare-const q19 (_ BitVec 16))
(declare-const q20 (_ BitVec 16))
(declare-const q21 (_ BitVec 16))
(declare-const q22 (_ BitVec 16))
(declare-const q23 (_ BitVec 16))
(declare-const q24 (_ BitVec 16))
(declare-const q25 (_ BitVec 16))
(declare-const q26 (_ BitVec 16))
(declare-const q27 (_ BitVec 16))
(declare-const q28 (_ BitVec 16))
(declare-const q29 (_ BitVec 16))
(declare-const q30 (_ BitVec 16))
(declare-const q31 (_ BitVec 16))
(declare-const q32 (_ BitVec 16))
(declare-const q33 (_ BitVec 16))
(declare-const q34 (_ BitVec 16))
(declare-const q35 (_ BitVec 16))
(declare-const q36 (_ BitVec 16))
(declare-const q37 (_ BitVec 16))
(declare-const q38 (_ BitVec 16))
(declare-const q39 (_ BitVec 16))
(declare-const gt0 (_ BitVec 16))
(declare-const gt1 (_ BitVec 16))
(declare-const gt2 (_ BitVec 16))
(declare-const gt3 (_ BitVec 16))
(declare-const gt4 (_ BitVec 16))
(declare-const gt5 (_ BitVec 16))
(declare-const gt6 (_ BitVec 16))
(declare-const gt7 (_ BitVec 16))
(declare-const gt8 (_ BitVec 16))
(declare-const gt9 (_ BitVec 16))
(declare-const gt10 (_ BitVec 16))
(declare-const gt11 (_ BitVec 16))
(declare-const gt12 (_ BitVec 16))
(declare-const gt13 (_ BitVec 16))
(declare-const gt14 (_ BitVec 16))
(declare-const gt15 (_ BitVec 16))
(declare-const gt16 (_ BitVec 16))
(declare-const gt17 (_ BitVec 16))
(declare-const gt18 (_ BitVec 16))
(declare-const gt19 (_ BitVec 16))
(assert (= x0 #b0000000011111111))
(assert (= x1 #b0000111100001111))
(assert (= x2 #b0011001100110011))
(assert (= x3 #b0101010101010101))
(assert (= y0 #b0011101100011001))
(assert (= y1 #b1100111101010000))
(assert (= y2 #b0101011100000111))
(assert (= y3 #b0111000101110100))
(assert (or (or (or (= q0 x0) (= q0 x1)) (= q0 x2)) (= q0 x3)))
(assert (or (or (or (= q1 x0) (= q1 x1)) (= q1 x2)) (= q1 x3)))
(assert (or (or (or (or (= q2 x0) (= q2 x1)) (= q2 x2)) (= q2 x3)) (= q2 t0)))
(assert (or (or (or (or (= q3 x0) (= q3 x1)) (= q3 x2)) (= q3 x3)) (= q3 t0)))
(assert (or (or (or (or (or (= q4 x0) (= q4 x1)) (= q4 x2)) (= q4 x3)) (= q4 t0)) (= q4 t1)))
(assert (or (or (or (or (or (= q5 x0) (= q5 x1)) (= q5 x2)) (= q5 x3)) (= q5 t0)) (= q5 t1)))
(assert (or (or (or (or (or (or (= q6 x0) (= q6 x1)) (= q6 x2)) (= q6 x3)) (= q6 t0)) (= q6 t1)) (= q6 t2)))
(assert (or (or (or (or (or (or (= q7 x0) (= q7 x1)) (= q7 x2)) (= q7 x3)) (= q7 t0)) (= q7 t1)) (= q7 t2)))
(assert (or (or (or (or (or (or (or (= q8 x0) (= q8 x1)) (= q8 x2)) (= q8 x3)) (= q8 t0)) (= q8 t1)) (= q8 t2)) (= q8 t3)))
(assert (or (or (or (or (or (or (or (= q9 x0) (= q9 x1)) (= q9 x2)) (= q9 x3)) (= q9 t0)) (= q9 t1)) (= q9 t2)) (= q9 t3)))
(assert (or (or (or (or (or (or (or (or (= q10 x0) (= q10 x1)) (= q10 x2)) (= q10 x3)) (= q10 t0)) (= q10 t1)) (= q10 t2)) (= q10 t3)) (= q10 t4)))
(assert (or (or (or (or (or (or (or (or (= q11 x0) (= q11 x1)) (= q11 x2)) (= q11 x3)) (= q11 t0)) (= q11 t1)) (= q11 t2)) (= q11 t3)) (= q11 t4)))
(assert (or (or (or (or (or (or (or (or (or (= q12 x0) (= q12 x1)) (= q12 x2)) (= q12 x3)) (= q12 t0)) (= q12 t1)) (= q12 t2)) (= q12 t3)) (= q12 t4)) (= q12 t5)))
(assert (or (or (or (or (or (or (or (or (or (= q13 x0) (= q13 x1)) (= q13 x2)) (= q13 x3)) (= q13 t0)) (= q13 t1)) (= q13 t2)) (= q13 t3)) (= q13 t4)) (= q13 t5)))
(assert (or (or (or (or (or (or (or (or (or (or (= q14 x0) (= q14 x1)) (= q14 x2)) (= q14 x3)) (= q14 t0)) (= q14 t1)) (= q14 t2)) (= q14 t3)) (= q14 t4)) (= q14 t5)) (= q14 t6)))
(assert (or (or (or (or (or (or (or (or (or (or (= q15 x0) (= q15 x1)) (= q15 x2)) (= q15 x3)) (= q15 t0)) (= q15 t1)) (= q15 t2)) (= q15 t3)) (= q15 t4)) (= q15 t5)) (= q15 t6)))
(assert (or (or (or (or (or (or (or (or (or (or (or (= q16 x0) (= q16 x1)) (= q16 x2)) (= q16 x3)) (= q16 t0)) (= q16 t1)) (= q16 t2)) (= q16 t3)) (= q16 t4)) (= q16 t5)) (= q16 t6)) (= q16 t7)))
(assert (or (or (or (or (or (or (or (or (or (or (or (= q17 x0) (= q17 x1)) (= q17 x2)) (= q17 x3)) (= q17 t0)) (= q17 t1)) (= q17 t2)) (= q17 t3)) (= q17 t4)) (= q17 t5)) (= q17 t6)) (= q17 t7)))
(assert (or (or (or (or (or (or (or (or (or (or (or (or (= q18 x0) (= q18 x1)) (= q18 x2)) (= q18 x3)) (= q18 t0)) (= q18 t1)) (= q18 t2)) (= q18 t3)) (= q18 t4)) (= q18 t5)) (= q18 t6)) (= q18 t7)) (= q18 t8)))
(assert (or (or (or (or (or (or (or (or (or (or (or (or (= q19 x0) (= q19 x1)) (= q19 x2)) (= q19 x3)) (= q19 t0)) (= q19 t1)) (= q19 t2)) (= q19 t3)) (= q19 t4)) (= q19 t5)) (= q19 t6)) (= q19 t7)) (= q19 t8)))
(assert (or (or (or (or (or (or (or (or (or (or (or (or (or (= q20 x0) (= q20 x1)) (= q20 x2)) (= q20 x3)) (= q20 t0)) (= q20 t1)) (= q20 t2)) (= q20 t3)) (= q20 t4)) (= q20 t5)) (= q20 t6)) (= q20 t7)) (= q20 t8)) (= q20 t9)))
(assert (or (or (or (or (or (or (or (or (or (or (or (or (or (= q21 x0) (= q21 x1)) (= q21 x2)) (= q21 x3)) (= q21 t0)) (= q21 t1)) (= q21 t2)) (= q21 t3)) (= q21 t4)) (= q21 t5)) (= q21 t6)) (= q21 t7)) (= q21 t8)) (= q21 t9)))
(assert (or (or (or (or (or (or (or (or (or (or (or (or (or (or (= q22 x0) (= q22 x1)) (= q22 x2)) (= q22 x3)) (= q22 t0)) (= q22 t1)) (= q22 t2)) (= q22 t3)) (= q22 t4)) (= q22 t5)) (= q22 t6)) (= q22 t7)) (= q22 t8)) (= q22 t9)) (= q22 t10)))
(assert (or (or (or (or (or (or (or (or (or (or (or (or (or (or (= q23 x0) (= q23 x1)) (= q23 x2)) (= q23 x3)) (= q23 t0)) (= q23 t1)) (= q23 t2)) (= q23 t3)) (= q23 t4)) (= q23 t5)) (= q23 t6)) (= q23 t7)) (= q23 t8)) (= q23 t9)) (= q23 t10)))
(assert (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (= q24 x0) (= q24 x1)) (= q24 x2)) (= q24 x3)) (= q24 t0)) (= q24 t1)) (= q24 t2)) (= q24 t3)) (= q24 t4)) (= q24 t5)) (= q24 t6)) (= q24 t7)) (= q24 t8)) (= q24 t9)) (= q24 t10)) (= q24 t11)))
(assert (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (= q25 x0) (= q25 x1)) (= q25 x2)) (= q25 x3)) (= q25 t0)) (= q25 t1)) (= q25 t2)) (= q25 t3)) (= q25 t4)) (= q25 t5)) (= q25 t6)) (= q25 t7)) (= q25 t8)) (= q25 t9)) (= q25 t10)) (= q25 t11)))
(assert (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (= q26 x0) (= q26 x1)) (= q26 x2)) (= q26 x3)) (= q26 t0)) (= q26 t1)) (= q26 t2)) (= q26 t3)) (= q26 t4)) (= q26 t5)) (= q26 t6)) (= q26 t7)) (= q26 t8)) (= q26 t9)) (= q26 t10)) (= q26 t11)) (= q26 t12)))
(assert (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (= q27 x0) (= q27 x1)) (= q27 x2)) (= q27 x3)) (= q27 t0)) (= q27 t1)) (= q27 t2)) (= q27 t3)) (= q27 t4)) (= q27 t5)) (= q27 t6)) (= q27 t7)) (= q27 t8)) (= q27 t9)) (= q27 t10)) (= q27 t11)) (= q27 t12)))
(assert (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (= q28 x0) (= q28 x1)) (= q28 x2)) (= q28 x3)) (= q28 t0)) (= q28 t1)) (= q28 t2)) (= q28 t3)) (= q28 t4)) (= q28 t5)) (= q28 t6)) (= q28 t7)) (= q28 t8)) (= q28 t9)) (= q28 t10)) (= q28 t11)) (= q28 t12)) (= q28 t13)))
(assert (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (= q29 x0) (= q29 x1)) (= q29 x2)) (= q29 x3)) (= q29 t0)) (= q29 t1)) (= q29 t2)) (= q29 t3)) (= q29 t4)) (= q29 t5)) (= q29 t6)) (= q29 t7)) (= q29 t8)) (= q29 t9)) (= q29 t10)) (= q29 t11)) (= q29 t12)) (= q29 t13)))
(assert (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (= q30 x0) (= q30 x1)) (= q30 x2)) (= q30 x3)) (= q30 t0)) (= q30 t1)) (= q30 t2)) (= q30 t3)) (= q30 t4)) (= q30 t5)) (= q30 t6)) (= q30 t7)) (= q30 t8)) (= q30 t9)) (= q30 t10)) (= q30 t11)) (= q30 t12)) (= q30 t13)) (= q30 t14)))
(assert (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (= q31 x0) (= q31 x1)) (= q31 x2)) (= q31 x3)) (= q31 t0)) (= q31 t1)) (= q31 t2)) (= q31 t3)) (= q31 t4)) (= q31 t5)) (= q31 t6)) (= q31 t7)) (= q31 t8)) (= q31 t9)) (= q31 t10)) (= q31 t11)) (= q31 t12)) (= q31 t13)) (= q31 t14)))
(assert (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (= q32 x0) (= q32 x1)) (= q32 x2)) (= q32 x3)) (= q32 t0)) (= q32 t1)) (= q32 t2)) (= q32 t3)) (= q32 t4)) (= q32 t5)) (= q32 t6)) (= q32 t7)) (= q32 t8)) (= q32 t9)) (= q32 t10)) (= q32 t11)) (= q32 t12)) (= q32 t13)) (= q32 t14)) (= q32 t15)))
(assert (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (= q33 x0) (= q33 x1)) (= q33 x2)) (= q33 x3)) (= q33 t0)) (= q33 t1)) (= q33 t2)) (= q33 t3)) (= q33 t4)) (= q33 t5)) (= q33 t6)) (= q33 t7)) (= q33 t8)) (= q33 t9)) (= q33 t10)) (= q33 t11)) (= q33 t12)) (= q33 t13)) (= q33 t14)) (= q33 t15)))
(assert (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (= q34 x0) (= q34 x1)) (= q34 x2)) (= q34 x3)) (= q34 t0)) (= q34 t1)) (= q34 t2)) (= q34 t3)) (= q34 t4)) (= q34 t5)) (= q34 t6)) (= q34 t7)) (= q34 t8)) (= q34 t9)) (= q34 t10)) (= q34 t11)) (= q34 t12)) (= q34 t13)) (= q34 t14)) (= q34 t15)) (= q34 t16)))
(assert (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (= q35 x0) (= q35 x1)) (= q35 x2)) (= q35 x3)) (= q35 t0)) (= q35 t1)) (= q35 t2)) (= q35 t3)) (= q35 t4)) (= q35 t5)) (= q35 t6)) (= q35 t7)) (= q35 t8)) (= q35 t9)) (= q35 t10)) (= q35 t11)) (= q35 t12)) (= q35 t13)) (= q35 t14)) (= q35 t15)) (= q35 t16)))
(assert (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (= q36 x0) (= q36 x1)) (= q36 x2)) (= q36 x3)) (= q36 t0)) (= q36 t1)) (= q36 t2)) (= q36 t3)) (= q36 t4)) (= q36 t5)) (= q36 t6)) (= q36 t7)) (= q36 t8)) (= q36 t9)) (= q36 t10)) (= q36 t11)) (= q36 t12)) (= q36 t13)) (= q36 t14)) (= q36 t15)) (= q36 t16)) (= q36 t17)))
(assert (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (= q37 x0) (= q37 x1)) (= q37 x2)) (= q37 x3)) (= q37 t0)) (= q37 t1)) (= q37 t2)) (= q37 t3)) (= q37 t4)) (= q37 t5)) (= q37 t6)) (= q37 t7)) (= q37 t8)) (= q37 t9)) (= q37 t10)) (= q37 t11)) (= q37 t12)) (= q37 t13)) (= q37 t14)) (= q37 t15)) (= q37 t16)) (= q37 t17)))
(assert (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (= q38 x0) (= q38 x1)) (= q38 x2)) (= q38 x3)) (= q38 t0)) (= q38 t1)) (= q38 t2)) (= q38 t3)) (= q38 t4)) (= q38 t5)) (= q38 t6)) (= q38 t7)) (= q38 t8)) (= q38 t9)) (= q38 t10)) (= q38 t11)) (= q38 t12)) (= q38 t13)) (= q38 t14)) (= q38 t15)) (= q38 t16)) (= q38 t17)) (= q38 t18)))
(assert (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (= q39 x0) (= q39 x1)) (= q39 x2)) (= q39 x3)) (= q39 t0)) (= q39 t1)) (= q39 t2)) (= q39 t3)) (= q39 t4)) (= q39 t5)) (= q39 t6)) (= q39 t7)) (= q39 t8)) (= q39 t9)) (= q39 t10)) (= q39 t11)) (= q39 t12)) (= q39 t13)) (= q39 t14)) (= q39 t15)) (= q39 t16)) (= q39 t17)) (= q39 t18)))
(assert (or (or (or (= gt0 #b0000000000000110) (= gt0 #b0000000000000001)) (= gt0 #b0000000000000111)) (= gt0 #b0000000000001100)))
(assert (or (or (or (= gt1 #b0000000000000110) (= gt1 #b0000000000000001)) (= gt1 #b0000000000000111)) (= gt1 #b0000000000001100)))
(assert (or (or (or (= gt2 #b0000000000000110) (= gt2 #b0000000000000001)) (= gt2 #b0000000000000111)) (= gt2 #b0000000000001100)))
(assert (or (or (or (= gt3 #b0000000000000110) (= gt3 #b0000000000000001)) (= gt3 #b0000000000000111)) (= gt3 #b0000000000001100)))
(assert (or (or (or (= gt4 #b0000000000000110) (= gt4 #b0000000000000001)) (= gt4 #b0000000000000111)) (= gt4 #b0000000000001100)))
(assert (or (or (or (= gt5 #b0000000000000110) (= gt5 #b0000000000000001)) (= gt5 #b0000000000000111)) (= gt5 #b0000000000001100)))
(assert (or (or (or (= gt6 #b0000000000000110) (= gt6 #b0000000000000001)) (= gt6 #b0000000000000111)) (= gt6 #b0000000000001100)))
(assert (or (or (or (= gt7 #b0000000000000110) (= gt7 #b0000000000000001)) (= gt7 #b0000000000000111)) (= gt7 #b0000000000001100)))
(assert (or (or (or (= gt8 #b0000000000000110) (= gt8 #b0000000000000001)) (= gt8 #b0000000000000111)) (= gt8 #b0000000000001100)))
(assert (or (or (or (= gt9 #b0000000000000110) (= gt9 #b0000000000000001)) (= gt9 #b0000000000000111)) (= gt9 #b0000000000001100)))
(assert (or (or (or (= gt10 #b0000000000000110) (= gt10 #b0000000000000001)) (= gt10 #b0000000000000111)) (= gt10 #b0000000000001100)))
(assert (or (or (or (= gt11 #b0000000000000110) (= gt11 #b0000000000000001)) (= gt11 #b0000000000000111)) (= gt11 #b0000000000001100)))
(assert (or (or (or (= gt12 #b0000000000000110) (= gt12 #b0000000000000001)) (= gt12 #b0000000000000111)) (= gt12 #b0000000000001100)))
(assert (or (or (or (= gt13 #b0000000000000110) (= gt13 #b0000000000000001)) (= gt13 #b0000000000000111)) (= gt13 #b0000000000001100)))
(assert (or (or (or (= gt14 #b0000000000000110) (= gt14 #b0000000000000001)) (= gt14 #b0000000000000111)) (= gt14 #b0000000000001100)))
(assert (or (or (or (= gt15 #b0000000000000110) (= gt15 #b0000000000000001)) (= gt15 #b0000000000000111)) (= gt15 #b0000000000001100)))
(assert (or (or (or (= gt16 #b0000000000000110) (= gt16 #b0000000000000001)) (= gt16 #b0000000000000111)) (= gt16 #b0000000000001100)))
(assert (or (or (or (= gt17 #b0000000000000110) (= gt17 #b0000000000000001)) (= gt17 #b0000000000000111)) (= gt17 #b0000000000001100)))
(assert (or (or (or (= gt18 #b0000000000000110) (= gt18 #b0000000000000001)) (= gt18 #b0000000000000111)) (= gt18 #b0000000000001100)))
(assert (or (or (or (= gt19 #b0000000000000110) (= gt19 #b0000000000000001)) (= gt19 #b0000000000000111)) (= gt19 #b0000000000001100)))
(assert (= t0 (bvxor (ite (bvult ((_ extract 0 0) gt0) #b1) #b0000000000000000 (bvand q0 q1)) (bvxor (ite (bvult ((_ extract 1 1) gt0) #b1) #b0000000000000000 q1) (bvxor (ite (bvult ((_ extract 2 2) gt0) #b1) #b0000000000000000 q0) (ite (bvult ((_ extract 3 3) gt0) #b1) #b0000000000000000 #b1111111111111111))))))
(assert (= t1 (bvxor (ite (bvult ((_ extract 0 0) gt1) #b1) #b0000000000000000 (bvand q2 q3)) (bvxor (ite (bvult ((_ extract 1 1) gt1) #b1) #b0000000000000000 q3) (bvxor (ite (bvult ((_ extract 2 2) gt1) #b1) #b0000000000000000 q2) (ite (bvult ((_ extract 3 3) gt1) #b1) #b0000000000000000 #b1111111111111111))))))
(assert (= t2 (bvxor (ite (bvult ((_ extract 0 0) gt2) #b1) #b0000000000000000 (bvand q4 q5)) (bvxor (ite (bvult ((_ extract 1 1) gt2) #b1) #b0000000000000000 q5) (bvxor (ite (bvult ((_ extract 2 2) gt2) #b1) #b0000000000000000 q4) (ite (bvult ((_ extract 3 3) gt2) #b1) #b0000000000000000 #b1111111111111111))))))
(assert (= t3 (bvxor (ite (bvult ((_ extract 0 0) gt3) #b1) #b0000000000000000 (bvand q6 q7)) (bvxor (ite (bvult ((_ extract 1 1) gt3) #b1) #b0000000000000000 q7) (bvxor (ite (bvult ((_ extract 2 2) gt3) #b1) #b0000000000000000 q6) (ite (bvult ((_ extract 3 3) gt3) #b1) #b0000000000000000 #b1111111111111111))))))
(assert (= t4 (bvxor (ite (bvult ((_ extract 0 0) gt4) #b1) #b0000000000000000 (bvand q8 q9)) (bvxor (ite (bvult ((_ extract 1 1) gt4) #b1) #b0000000000000000 q9) (bvxor (ite (bvult ((_ extract 2 2) gt4) #b1) #b0000000000000000 q8) (ite (bvult ((_ extract 3 3) gt4) #b1) #b0000000000000000 #b1111111111111111))))))
(assert (= t5 (bvxor (ite (bvult ((_ extract 0 0) gt5) #b1) #b0000000000000000 (bvand q10 q11)) (bvxor (ite (bvult ((_ extract 1 1) gt5) #b1) #b0000000000000000 q11) (bvxor (ite (bvult ((_ extract 2 2) gt5) #b1) #b0000000000000000 q10) (ite (bvult ((_ extract 3 3) gt5) #b1) #b0000000000000000 #b1111111111111111))))))
(assert (= t6 (bvxor (ite (bvult ((_ extract 0 0) gt6) #b1) #b0000000000000000 (bvand q12 q13)) (bvxor (ite (bvult ((_ extract 1 1) gt6) #b1) #b0000000000000000 q13) (bvxor (ite (bvult ((_ extract 2 2) gt6) #b1) #b0000000000000000 q12) (ite (bvult ((_ extract 3 3) gt6) #b1) #b0000000000000000 #b1111111111111111))))))
(assert (= t7 (bvxor (ite (bvult ((_ extract 0 0) gt7) #b1) #b0000000000000000 (bvand q14 q15)) (bvxor (ite (bvult ((_ extract 1 1) gt7) #b1) #b0000000000000000 q15) (bvxor (ite (bvult ((_ extract 2 2) gt7) #b1) #b0000000000000000 q14) (ite (bvult ((_ extract 3 3) gt7) #b1) #b0000000000000000 #b1111111111111111))))))
(assert (= t8 (bvxor (ite (bvult ((_ extract 0 0) gt8) #b1) #b0000000000000000 (bvand q16 q17)) (bvxor (ite (bvult ((_ extract 1 1) gt8) #b1) #b0000000000000000 q17) (bvxor (ite (bvult ((_ extract 2 2) gt8) #b1) #b0000000000000000 q16) (ite (bvult ((_ extract 3 3) gt8) #b1) #b0000000000000000 #b1111111111111111))))))
(assert (= t9 (bvxor (ite (bvult ((_ extract 0 0) gt9) #b1) #b0000000000000000 (bvand q18 q19)) (bvxor (ite (bvult ((_ extract 1 1) gt9) #b1) #b0000000000000000 q19) (bvxor (ite (bvult ((_ extract 2 2) gt9) #b1) #b0000000000000000 q18) (ite (bvult ((_ extract 3 3) gt9) #b1) #b0000000000000000 #b1111111111111111))))))
(assert (= t10 (bvxor (ite (bvult ((_ extract 0 0) gt10) #b1) #b0000000000000000 (bvand q20 q21)) (bvxor (ite (bvult ((_ extract 1 1) gt10) #b1) #b0000000000000000 q21) (bvxor (ite (bvult ((_ extract 2 2) gt10) #b1) #b0000000000000000 q20) (ite (bvult ((_ extract 3 3) gt10) #b1) #b0000000000000000 #b1111111111111111))))))
(assert (= t11 (bvxor (ite (bvult ((_ extract 0 0) gt11) #b1) #b0000000000000000 (bvand q22 q23)) (bvxor (ite (bvult ((_ extract 1 1) gt11) #b1) #b0000000000000000 q23) (bvxor (ite (bvult ((_ extract 2 2) gt11) #b1) #b0000000000000000 q22) (ite (bvult ((_ extract 3 3) gt11) #b1) #b0000000000000000 #b1111111111111111))))))
(assert (= t12 (bvxor (ite (bvult ((_ extract 0 0) gt12) #b1) #b0000000000000000 (bvand q24 q25)) (bvxor (ite (bvult ((_ extract 1 1) gt12) #b1) #b0000000000000000 q25) (bvxor (ite (bvult ((_ extract 2 2) gt12) #b1) #b0000000000000000 q24) (ite (bvult ((_ extract 3 3) gt12) #b1) #b0000000000000000 #b1111111111111111))))))
(assert (= t13 (bvxor (ite (bvult ((_ extract 0 0) gt13) #b1) #b0000000000000000 (bvand q26 q27)) (bvxor (ite (bvult ((_ extract 1 1) gt13) #b1) #b0000000000000000 q27) (bvxor (ite (bvult ((_ extract 2 2) gt13) #b1) #b0000000000000000 q26) (ite (bvult ((_ extract 3 3) gt13) #b1) #b0000000000000000 #b1111111111111111))))))
(assert (= t14 (bvxor (ite (bvult ((_ extract 0 0) gt14) #b1) #b0000000000000000 (bvand q28 q29)) (bvxor (ite (bvult ((_ extract 1 1) gt14) #b1) #b0000000000000000 q29) (bvxor (ite (bvult ((_ extract 2 2) gt14) #b1) #b0000000000000000 q28) (ite (bvult ((_ extract 3 3) gt14) #b1) #b0000000000000000 #b1111111111111111))))))
(assert (= t15 (bvxor (ite (bvult ((_ extract 0 0) gt15) #b1) #b0000000000000000 (bvand q30 q31)) (bvxor (ite (bvult ((_ extract 1 1) gt15) #b1) #b0000000000000000 q31) (bvxor (ite (bvult ((_ extract 2 2) gt15) #b1) #b0000000000000000 q30) (ite (bvult ((_ extract 3 3) gt15) #b1) #b0000000000000000 #b1111111111111111))))))
(assert (= t16 (bvxor (ite (bvult ((_ extract 0 0) gt16) #b1) #b0000000000000000 (bvand q32 q33)) (bvxor (ite (bvult ((_ extract 1 1) gt16) #b1) #b0000000000000000 q33) (bvxor (ite (bvult ((_ extract 2 2) gt16) #b1) #b0000000000000000 q32) (ite (bvult ((_ extract 3 3) gt16) #b1) #b0000000000000000 #b1111111111111111))))))
(assert (= t17 (bvxor (ite (bvult ((_ extract 0 0) gt17) #b1) #b0000000000000000 (bvand q34 q35)) (bvxor (ite (bvult ((_ extract 1 1) gt17) #b1) #b0000000000000000 q35) (bvxor (ite (bvult ((_ extract 2 2) gt17) #b1) #b0000000000000000 q34) (ite (bvult ((_ extract 3 3) gt17) #b1) #b0000000000000000 #b1111111111111111))))))
(assert (= t18 (bvxor (ite (bvult ((_ extract 0 0) gt18) #b1) #b0000000000000000 (bvand q36 q37)) (bvxor (ite (bvult ((_ extract 1 1) gt18) #b1) #b0000000000000000 q37) (bvxor (ite (bvult ((_ extract 2 2) gt18) #b1) #b0000000000000000 q36) (ite (bvult ((_ extract 3 3) gt18) #b1) #b0000000000000000 #b1111111111111111))))))
(assert (= t19 (bvxor (ite (bvult ((_ extract 0 0) gt19) #b1) #b0000000000000000 (bvand q38 q39)) (bvxor (ite (bvult ((_ extract 1 1) gt19) #b1) #b0000000000000000 q39) (bvxor (ite (bvult ((_ extract 2 2) gt19) #b1) #b0000000000000000 q38) (ite (bvult ((_ extract 3 3) gt19) #b1) #b0000000000000000 #b1111111111111111))))))
(assert (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (= y0 t0) (= y0 t1)) (= y0 t2)) (= y0 t3)) (= y0 t4)) (= y0 t5)) (= y0 t6)) (= y0 t7)) (= y0 t8)) (= y0 t9)) (= y0 t10)) (= y0 t11)) (= y0 t12)) (= y0 t13)) (= y0 t14)) (= y0 t15)) (= y0 t16)) (= y0 t17)) (= y0 t18)) (= y0 t19)))
(assert (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (= y1 t0) (= y1 t1)) (= y1 t2)) (= y1 t3)) (= y1 t4)) (= y1 t5)) (= y1 t6)) (= y1 t7)) (= y1 t8)) (= y1 t9)) (= y1 t10)) (= y1 t11)) (= y1 t12)) (= y1 t13)) (= y1 t14)) (= y1 t15)) (= y1 t16)) (= y1 t17)) (= y1 t18)) (= y1 t19)))
(assert (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (= y2 t0) (= y2 t1)) (= y2 t2)) (= y2 t3)) (= y2 t4)) (= y2 t5)) (= y2 t6)) (= y2 t7)) (= y2 t8)) (= y2 t9)) (= y2 t10)) (= y2 t11)) (= y2 t12)) (= y2 t13)) (= y2 t14)) (= y2 t15)) (= y2 t16)) (= y2 t17)) (= y2 t18)) (= y2 t19)))
(assert (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (= y3 t0) (= y3 t1)) (= y3 t2)) (= y3 t3)) (= y3 t4)) (= y3 t5)) (= y3 t6)) (= y3 t7)) (= y3 t8)) (= y3 t9)) (= y3 t10)) (= y3 t11)) (= y3 t12)) (= y3 t13)) (= y3 t14)) (= y3 t15)) (= y3 t16)) (= y3 t17)) (= y3 t18)) (= y3 t19)))
(check-sat)
(get-model)
(exit)
